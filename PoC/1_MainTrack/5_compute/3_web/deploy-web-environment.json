{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01-preview/deploymentTemplate.json",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "vmssName": {
            "type": "string",
            "defaultValue": "webw2vmss1",
            "metadata": {
                "description": "Unique name for the scale set. Must be 3-61 characters in length and unique across the VNet."
            },
            "maxLength": 61
        },
        "instanceCount": {
            "type": "int",
            "metadata": {
                "description": "Number of VM instances (10 or less)."
            },
            "defaultValue": 2,
            "maxValue": 10
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_D1_v2",
            "metadata": {
                "description": "Size of VMs in the VM Scale Set."
            }
        },
        "AzureSqlServerName": {
            "type": "string",
            "metadata": {
                "description": "Unique name for the scale set. Must be 3-61 characters in length and unique across the VNet."
            },
            "maxLength": 61
        },
        "WebSiteDnsName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing subnet to deploy the scale set into."
            }
        },
        "existingVnetName": {
            "type": "string",
            "metadata": {
                "description": "vName of the existing virtual network to deploy the scale set into."
            }
        },
        "existingSubnetName": {
            "type": "string",
            "metadata": {
                "description": "Name of the existing subnet to deploy the scale set into."
            }
        },
        "adminUsername": {
            "type": "string",
            "metadata": {
                "description": "Admin username on all VMs and Azure SQL Server."
            }
        },
        "vaultResourceGroupName": {
            "type": "string",
            "metadata": {
                "description": "The name of the resource group that contains the keyvault."
            }
        },
        "vaultName": {
            "type": "string",
            "metadata": {
                "description": "The name of the keyvault that contains the secret."
            }
        },
        "mySecret": {
            "type": "string",
            "metadata": {
                "description": "Keyvault storing the password for the localadmin."
            }
        }
    },
    "variables": {},
    "resources": [
        {
            "apiVersion": "2015-01-01",
            "name": "nestedTemplate",
            "type": "Microsoft.Resources/deployments",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://raw.githubusercontent.com/rodrigosantosms/aahc/master/PoC/1_MainTrack/5_compute/3_web/deploy-web-environment-nested.json",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "vmssName": {
                        "value": "[parameters('vmssName')]"
                    },
                    "instanceCount": {
                        "value": "[parameters('instanceCount')]"
                    },
                    "vmSize": {
                        "value": "[parameters('vmSize')]"
                    },
                    "AzureSqlServerName": {
                        "value": "[parameters('AzureSqlServerName')]"
                    },
                    "WebSiteDnsName": {
                        "value": "[parameters('WebSiteDnsName')]"
                    },
                    "existingVnetName": {
                        "value": "[parameters('existingVnetName')]"
                    },
                    "existingSubnetName": {
                        "value": "[parameters('existingSubnetName')]"
                    },
                    "adminUsername": {
                        "value": "[parameters('adminUsername')]"
                    },
                    "adminPassword": {
                        "reference": {
                            "keyVault": {
                                "id": "[resourceId(subscription().subscriptionId,  parameters('vaultResourceGroupName'), 'Microsoft.KeyVault/vaults', parameters('vaultName'))]"
                            },
                            "secretName": "[parameters('mySecret')]"
                        }
                    }
                }
            }
        }
    ]
}